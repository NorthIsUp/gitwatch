import { PlatformAccessory, CharacteristicValue } from 'homebridge';
import { HomeassistantHomebridgePlatform } from '../platform';
import { Payload } from '../model/mqtt-payload';
/**
 * Platform Accessory
 * An instance of this class is created for each accessory your platform registers
 * Each accessory may expose multiple services of different service types.
 */
export declare class LockPlatformAccessory {
    private readonly platform;
    private readonly accessory;
    private service;
    private configuration;
    private currentState;
    private targetState;
    constructor(platform: HomeassistantHomebridgePlatform, accessory: PlatformAccessory);
    handleMQTTTargetStateEvent(payload: Payload): Promise<void>;
    handleMQTTCurrentStateEvent(payload: Payload): Promise<void>;
    handleHomekitLockCurrentStateGet(): Promise<CharacteristicValue>;
    handleHomekitLockTargetStateGet(): Promise<CharacteristicValue>;
    handleHomekitLockTargetStateSet(value: CharacteristicValue): Promise<void>;
}
//# sourceMappingURL=lockAccessory.d.ts.map