export declare class SwitchActionMapping {
    serviceLabelIndex: number | undefined;
    extension: number | undefined;
    valueSinglePress: string | undefined;
    valueDoublePress: string | undefined;
    valueLongPress: string | undefined;
    private _id;
    get subType(): string | undefined;
    get identifier(): string | undefined;
    set identifier(value: string | undefined);
    merge(other: SwitchActionMapping): SwitchActionMapping;
    private compareValuesForMerge;
    hasValidValues(): boolean;
    isValidMapping(): boolean;
    toString(): string | undefined;
}
export declare class SwitchActionHelper {
    private static readonly singleAction;
    private static readonly doubleAction;
    private static readonly longAction;
    private static readonly tripleAction;
    private static readonly quadrupleAction;
    private static readonly ignoredAdditions;
    private static readonly separators;
    private static readonly regex_number;
    private readonly regex_id_start;
    private readonly regex_id_end;
    private readonly regex_separator_count;
    private static instance;
    private constructor();
    static getInstance(): SwitchActionHelper;
    private firstNumberInString;
    private numberOfSeparators;
    private matchActionValues;
    private valueToMapping;
    valuesToNumberedMappings(values: string[]): SwitchActionMapping[];
    private determineLabelStrategy;
    private labelSortedMappings;
    private sortByFirstNumber;
    private sortMappingsByIdentifier;
}
//# sourceMappingURL=action_helper.d.ts.map